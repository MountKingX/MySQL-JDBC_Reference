/*
 * This file is generated by jOOQ.
 */
package com.kangmin.jooq.db.generated;


import com.kangmin.jooq.db.generated.tables.Author;
import com.kangmin.jooq.db.generated.tables.AuthorBook;
import com.kangmin.jooq.db.generated.tables.Book;
import com.kangmin.jooq.db.generated.tables.Department;
import com.kangmin.jooq.db.generated.tables.Employee;
import com.kangmin.jooq.db.generated.tables.FlywaySchemaHistory;
import com.kangmin.jooq.db.generated.tables.records.AuthorBookRecord;
import com.kangmin.jooq.db.generated.tables.records.AuthorRecord;
import com.kangmin.jooq.db.generated.tables.records.BookRecord;
import com.kangmin.jooq.db.generated.tables.records.DepartmentRecord;
import com.kangmin.jooq.db.generated.tables.records.EmployeeRecord;
import com.kangmin.jooq.db.generated.tables.records.FlywaySchemaHistoryRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>testdbtest</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<DepartmentRecord, Integer> IDENTITY_DEPARTMENT = Identities0.IDENTITY_DEPARTMENT;
    public static final Identity<EmployeeRecord, Integer> IDENTITY_EMPLOYEE = Identities0.IDENTITY_EMPLOYEE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AuthorRecord> KEY_AUTHOR_PRIMARY = UniqueKeys0.KEY_AUTHOR_PRIMARY;
    public static final UniqueKey<AuthorBookRecord> KEY_AUTHOR_BOOK_PRIMARY = UniqueKeys0.KEY_AUTHOR_BOOK_PRIMARY;
    public static final UniqueKey<BookRecord> KEY_BOOK_PRIMARY = UniqueKeys0.KEY_BOOK_PRIMARY;
    public static final UniqueKey<DepartmentRecord> KEY_DEPARTMENT_PRIMARY = UniqueKeys0.KEY_DEPARTMENT_PRIMARY;
    public static final UniqueKey<EmployeeRecord> KEY_EMPLOYEE_PRIMARY = UniqueKeys0.KEY_EMPLOYEE_PRIMARY;
    public static final UniqueKey<FlywaySchemaHistoryRecord> KEY_FLYWAY_SCHEMA_HISTORY_PRIMARY = UniqueKeys0.KEY_FLYWAY_SCHEMA_HISTORY_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AuthorBookRecord, AuthorRecord> FK_AB_AUTHOR = ForeignKeys0.FK_AB_AUTHOR;
    public static final ForeignKey<AuthorBookRecord, BookRecord> FK_AB_BOOK = ForeignKeys0.FK_AB_BOOK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<DepartmentRecord, Integer> IDENTITY_DEPARTMENT = Internal.createIdentity(Department.DEPARTMENT, Department.DEPARTMENT.ID);
        public static Identity<EmployeeRecord, Integer> IDENTITY_EMPLOYEE = Internal.createIdentity(Employee.EMPLOYEE, Employee.EMPLOYEE.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AuthorRecord> KEY_AUTHOR_PRIMARY = Internal.createUniqueKey(Author.AUTHOR, "KEY_author_PRIMARY", Author.AUTHOR.ID);
        public static final UniqueKey<AuthorBookRecord> KEY_AUTHOR_BOOK_PRIMARY = Internal.createUniqueKey(AuthorBook.AUTHOR_BOOK, "KEY_author_book_PRIMARY", AuthorBook.AUTHOR_BOOK.AUTHOR_ID, AuthorBook.AUTHOR_BOOK.BOOK_ID);
        public static final UniqueKey<BookRecord> KEY_BOOK_PRIMARY = Internal.createUniqueKey(Book.BOOK, "KEY_book_PRIMARY", Book.BOOK.ID);
        public static final UniqueKey<DepartmentRecord> KEY_DEPARTMENT_PRIMARY = Internal.createUniqueKey(Department.DEPARTMENT, "KEY_department_PRIMARY", Department.DEPARTMENT.ID);
        public static final UniqueKey<EmployeeRecord> KEY_EMPLOYEE_PRIMARY = Internal.createUniqueKey(Employee.EMPLOYEE, "KEY_employee_PRIMARY", Employee.EMPLOYEE.ID);
        public static final UniqueKey<FlywaySchemaHistoryRecord> KEY_FLYWAY_SCHEMA_HISTORY_PRIMARY = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, "KEY_flyway_schema_history_PRIMARY", FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AuthorBookRecord, AuthorRecord> FK_AB_AUTHOR = Internal.createForeignKey(com.kangmin.jooq.db.generated.Keys.KEY_AUTHOR_PRIMARY, AuthorBook.AUTHOR_BOOK, "fk_ab_author", AuthorBook.AUTHOR_BOOK.AUTHOR_ID);
        public static final ForeignKey<AuthorBookRecord, BookRecord> FK_AB_BOOK = Internal.createForeignKey(com.kangmin.jooq.db.generated.Keys.KEY_BOOK_PRIMARY, AuthorBook.AUTHOR_BOOK, "fk_ab_book", AuthorBook.AUTHOR_BOOK.BOOK_ID);
    }
}
